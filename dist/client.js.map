{"mappings":"C,A,kC;A,uC;A,E;A,2D;A,E;A,4D;A,wD;A,S,C,C,C,C,C,C,C,C,C,E,2B,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,0D;A,+D;A,8B;A,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,E,gE;A,6D;A,+D;A,gC;A,G,E,O,E,E,C,E,+C;A,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,I,C,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,qD;A,yE;A,I,E,E,E,Y;A,U,O,S,A,a,O,O,O,O,C,E,A,Y,O,Q,O,G,C,O,W,O,C,G,G,C,I,C,E,C,C,C,C,E,C,M,C,S,C,C,C,C,C,ECAA,EAAA,gCACA,EAAA,oCACA,EAAA,kCACA,EAAA,+BACA,EAAA,iCACA,EAAA,4BACA,EAAA,qCACA,EAAA,0CACA,EAAA,+BACA,EAAA,8BAEA,IAAM,EAAqB,oBACrB,EAAoB,mBAEpB,EAAU,eAAe,OAAO,CAAC,IAAuB,EAC9D,OAAO,QAAQ,CAAC,EAAG,OAAO,IAE1B,IAAM,EAAmB,OAAO,QAAQ,CAAC,aAAa,CACpD,4BAEI,EAAiB,eAAe,OAAO,CAAC,IAAsB,GAC9D,EAAe,OAAO,QAAQ,CAAC,cAAc,CAAC,GAC9C,EAAqB,GAAoB,EAE3C,aAA8B,c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","sources":["<anon>","src/client/index.ts","src/client/elements/AutoSaveTextElement.ts","src/client/elements/BaseAutoSaveElement.ts","src/shared/getUniqueId.ts","node_modules/uuid/dist/esm-browser/index.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/regex.js","src/client/elements/UnloadHandlerElement.ts","src/client/elements/AutoSaveCheckboxElement.ts","src/client/elements/AutoSaveSearchElement.ts","node_modules/debounce/index.js","src/client/elements/ClearSearchElement.ts","src/client/elements/PostFormElement.ts","src/client/elements/SelectAllCheckboxElement.ts","src/client/elements/GridKeyboardNavigationElement.ts","src/client/elements/ModalDialogElement.ts","src/client/elements/FlyoutMenuElement.ts"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        this\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"gUvsp\":[function(require,module,exports) {\nvar _autoSaveTextElement = require(\"elements/AutoSaveTextElement\");\nvar _autoSaveCheckboxElement = require(\"elements/AutoSaveCheckboxElement\");\nvar _autoSaveSearchElement = require(\"elements/AutoSaveSearchElement\");\nvar _clearSearchElement = require(\"elements/ClearSearchElement\");\nvar _unloadHandlerElement = require(\"elements/UnloadHandlerElement\");\nvar _postFormElement = require(\"elements/PostFormElement\");\nvar _selectAllCheckboxElement = require(\"elements/SelectAllCheckboxElement\");\nvar _gridKeyboardNavigationElement = require(\"elements/GridKeyboardNavigationElement\");\nvar _modalDialogElement = require(\"elements/ModalDialogElement\");\nvar _flyoutMenuElement = require(\"elements/FlyoutMenuElement\");\nconst SCROLL_STORAGE_KEY = \"scroll-position-y\";\nconst FOCUS_STORAGE_KEY = \"focus-element-id\";\nconst windowY = sessionStorage.getItem(SCROLL_STORAGE_KEY) || 0;\nwindow.scrollTo(0, Number(windowY));\nconst autofocusElement = window.document.querySelector('[data-auto-focus=\"true\"]');\nconst focusElementId = sessionStorage.getItem(FOCUS_STORAGE_KEY) || \"\";\nconst focusElement = window.document.getElementById(focusElementId);\nconst elementToAutoFocus = autofocusElement || focusElement;\nif (elementToAutoFocus instanceof HTMLElement) {\n    elementToAutoFocus.focus();\n    if (elementToAutoFocus instanceof HTMLInputElement && elementToAutoFocus.value.length > 0 && (elementToAutoFocus.type === \"text\" || elementToAutoFocus.type === \"search\")) elementToAutoFocus.selectionStart = elementToAutoFocus.selectionEnd = elementToAutoFocus.value.length;\n}\nconst handleScroll = ()=>{\n    window.sessionStorage.setItem(SCROLL_STORAGE_KEY, `${window.scrollY}`);\n};\nwindow.addEventListener(\"scroll\", handleScroll);\nconst handleFocus = ()=>{\n    sessionStorage.setItem(FOCUS_STORAGE_KEY, window.document.activeElement?.id || \"\");\n};\nwindow.document.body.addEventListener(\"focusin\", handleFocus);\n\n},{\"elements/AutoSaveTextElement\":\"jpb0K\",\"elements/AutoSaveCheckboxElement\":\"3MJok\",\"elements/AutoSaveSearchElement\":\"8q7LM\",\"elements/ClearSearchElement\":\"foex1\",\"elements/UnloadHandlerElement\":\"bGTnF\",\"elements/PostFormElement\":\"cKAw4\",\"elements/SelectAllCheckboxElement\":\"enxk1\",\"elements/GridKeyboardNavigationElement\":\"a0B3I\",\"elements/ModalDialogElement\":\"4HvQn\",\"elements/FlyoutMenuElement\":\"41FSx\"}],\"jpb0K\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"AutoSaveTextElement\", ()=>AutoSaveTextElement);\nvar _baseAutoSaveElement = require(\"elements/BaseAutoSaveElement\");\nclass AutoSaveTextElement extends (0, _baseAutoSaveElement.BaseAutoSaveElement) {\n    connectedCallback() {\n        this.inputElement.addEventListener(\"pointerdown\", this.boundClickHandler);\n        this.inputElement.addEventListener(\"change\", this.boundChangeHandler);\n        this.inputElement.addEventListener(\"keydown\", this.boundKeydownHandler);\n        this.inputElement.addEventListener(\"blur\", this.boundBlurHandler);\n    }\n    disconnectedCallback() {\n        this.inputElement.removeEventListener(\"pointerdown\", this.boundClickHandler);\n        this.inputElement.removeEventListener(\"change\", this.boundChangeHandler);\n        this.inputElement.removeEventListener(\"keydown\", this.boundKeydownHandler);\n        this.inputElement.removeEventListener(\"blur\", this.boundBlurHandler);\n    }\n    handleClick() {\n        if (this.inputElement.readOnly) this.toggleEditMode();\n    }\n    handleBlur() {\n        if (!this.inputElement.readOnly) this.toggleEditMode();\n    }\n    handleKeydown(event) {\n        if (!(event instanceof KeyboardEvent)) return;\n        if (event.key === \"Escape\") {\n            if (!this.inputElement.readOnly) {\n                const currentValue = this.inputElement.value;\n                const savedValue = this.inputElement.getAttribute(\"value\") || \"\";\n                if (currentValue === savedValue) this.toggleEditMode();\n                else this.inputElement.value = this.inputElement.getAttribute(\"value\") || \"\";\n            }\n        }\n        if (event.key === \"Enter\") {\n            this.toggleEditMode();\n            event.preventDefault();\n            if (this.inputElement.readOnly) this.dispatchEvent(new CustomEvent(\"auto-save-text:toggle-edit-mode\", {\n                composed: true,\n                bubbles: true\n            }));\n            else this.inputElement.selectionStart = this.inputElement.selectionEnd = this.inputElement.value.length;\n        }\n        if (event.key.length === 1 && /[a-zA-Z0-9-_ ]/.test(event.key)) {\n            if (this.inputElement.readOnly) {\n                this.toggleEditMode();\n                this.inputElement.value = \"\";\n                this.inputElement.selectionStart = this.inputElement.selectionEnd = this.inputElement.value.length;\n            }\n        }\n    }\n    toggleEditMode() {\n        this.inputElement.readOnly = !this.inputElement.readOnly;\n    }\n    handleChange() {\n        const value = this.inputElement.value;\n        const formElement = this.inputElement.form;\n        if (!formElement) {\n            this.markDirty();\n            return;\n        }\n        const formAction = formElement.getAttribute(\"action\");\n        if (!formAction) return;\n        const method = new FormData(formElement).get(\"_method\")?.toString() || \"\";\n        if ([\n            \"PUT\",\n            \"PATCH\"\n        ].includes(method)) this.patch(formAction, value).then(()=>{\n            this.inputElement.setAttribute(\"value\", value);\n        }).catch(()=>{\n            this.markDirty();\n        });\n        else this.markDirty();\n    }\n    constructor(...args){\n        super(...args);\n        this.boundKeydownHandler = this.handleKeydown.bind(this);\n        this.boundClickHandler = this.handleClick.bind(this);\n        this.boundBlurHandler = this.handleBlur.bind(this);\n    }\n}\nwindow.customElements.define(\"auto-save-text\", AutoSaveTextElement);\n\n},{\"elements/BaseAutoSaveElement\":\"gOsXZ\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"gOsXZ\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"BaseAutoSaveElement\", ()=>BaseAutoSaveElement);\nvar _getUniqueId = require(\"shared/getUniqueId\");\nvar _unloadHandlerElement = require(\"elements/UnloadHandlerElement\");\nclass BaseAutoSaveElement extends HTMLElement {\n    constructor(){\n        super();\n        if (!this.shadowRoot) throw new Error(\"Declarative shadow root not supported\");\n        const slotElement = this.shadowRoot.querySelector(\"slot\");\n        if (!(slotElement instanceof HTMLSlotElement)) throw new Error(\"No slot element provided\");\n        const assignedNodes = slotElement.assignedNodes();\n        if (!assignedNodes || !assignedNodes.length) throw new Error(\"No content provided\");\n        function guardIsHTMLInputElement(node) {\n            return node instanceof HTMLInputElement;\n        }\n        const inputElement = assignedNodes.find(guardIsHTMLInputElement);\n        if (!inputElement) throw new Error(\"No input element provided\");\n        const unloadHandlerElement = window.document.querySelector(\"unload-handler\");\n        if (!(unloadHandlerElement instanceof HTMLElement)) throw new Error(\"No unload handler element found\");\n        this.inputElement = inputElement;\n        this.inputId = inputElement.id || (0, _getUniqueId.getUniqueId)();\n        this.unloadHandlerElement = unloadHandlerElement;\n        this.boundChangeHandler = this.handleChange.bind(this);\n        this.boundInputHandler = this.handleInput.bind(this);\n    }\n    handleChange() {}\n    handleInput() {}\n    markDirty() {\n        const prev = this.unloadHandlerElement.getAttribute((0, _unloadHandlerElement.DIRTY_ELEMENTS_KEY)) || \"\";\n        const dirtyElementsArray = !prev ? [] : prev.split(\",\");\n        dirtyElementsArray.push(this.inputId);\n        const uniqueDirtyElementsArray = Array.from(new Set(dirtyElementsArray));\n        const dirtyElementsString = uniqueDirtyElementsArray.join(\",\");\n        this.unloadHandlerElement.setAttribute((0, _unloadHandlerElement.DIRTY_ELEMENTS_KEY), dirtyElementsString);\n        this.inputElement.setAttribute(\"data-dirty\", \"\");\n    }\n    markClean() {\n        const prev = this.unloadHandlerElement.getAttribute((0, _unloadHandlerElement.DIRTY_ELEMENTS_KEY)) || \"\";\n        const dirtyElementsArray = !prev ? [] : prev.split(\",\");\n        const dirtyElementsString = dirtyElementsArray.filter((id)=>id !== this.inputId).join(\",\");\n        this.unloadHandlerElement.setAttribute((0, _unloadHandlerElement.DIRTY_ELEMENTS_KEY), dirtyElementsString);\n        this.inputElement.removeAttribute(\"data-dirty\");\n    }\n    async patch(url, value) {\n        const formData = new FormData();\n        formData.append(\"_method\", \"PATCH\");\n        formData.append(this.inputElement.name, value);\n        return window.fetch(url, {\n            method: \"POST\",\n            body: formData\n        }).then((res)=>{\n            if (res.status === 404) throw new Error(\"Not found\");\n            return res;\n        });\n    }\n}\n\n},{\"shared/getUniqueId\":\"eClT9\",\"elements/UnloadHandlerElement\":\"bGTnF\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"eClT9\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"getUniqueId\", ()=>getUniqueId);\nvar _uuid = require(\"uuid\");\nfunction getUniqueId() {\n    return `${Date.now()}-${(0, _uuid.v4)()}`;\n}\n\n},{\"uuid\":\"klst7\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"klst7\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"v1\", ()=>(0, _v1JsDefault.default));\nparcelHelpers.export(exports, \"v3\", ()=>(0, _v3JsDefault.default));\nparcelHelpers.export(exports, \"v4\", ()=>(0, _v4JsDefault.default));\nparcelHelpers.export(exports, \"v5\", ()=>(0, _v5JsDefault.default));\nparcelHelpers.export(exports, \"NIL\", ()=>(0, _nilJsDefault.default));\nparcelHelpers.export(exports, \"version\", ()=>(0, _versionJsDefault.default));\nparcelHelpers.export(exports, \"validate\", ()=>(0, _validateJsDefault.default));\nparcelHelpers.export(exports, \"stringify\", ()=>(0, _stringifyJsDefault.default));\nparcelHelpers.export(exports, \"parse\", ()=>(0, _parseJsDefault.default));\nvar _v1Js = require(\"./v1.js\");\nvar _v1JsDefault = parcelHelpers.interopDefault(_v1Js);\nvar _v3Js = require(\"./v3.js\");\nvar _v3JsDefault = parcelHelpers.interopDefault(_v3Js);\nvar _v4Js = require(\"./v4.js\");\nvar _v4JsDefault = parcelHelpers.interopDefault(_v4Js);\nvar _v5Js = require(\"./v5.js\");\nvar _v5JsDefault = parcelHelpers.interopDefault(_v5Js);\nvar _nilJs = require(\"./nil.js\");\nvar _nilJsDefault = parcelHelpers.interopDefault(_nilJs);\nvar _versionJs = require(\"./version.js\");\nvar _versionJsDefault = parcelHelpers.interopDefault(_versionJs);\nvar _validateJs = require(\"./validate.js\");\nvar _validateJsDefault = parcelHelpers.interopDefault(_validateJs);\nvar _stringifyJs = require(\"./stringify.js\");\nvar _stringifyJsDefault = parcelHelpers.interopDefault(_stringifyJs);\nvar _parseJs = require(\"./parse.js\");\nvar _parseJsDefault = parcelHelpers.interopDefault(_parseJs);\n\n},{\"./v1.js\":false,\"./v3.js\":false,\"./v4.js\":\"fpA4M\",\"./v5.js\":false,\"./nil.js\":false,\"./version.js\":false,\"./validate.js\":false,\"./stringify.js\":false,\"./parse.js\":false,\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"fpA4M\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _nativeJs = require(\"./native.js\");\nvar _nativeJsDefault = parcelHelpers.interopDefault(_nativeJs);\nvar _rngJs = require(\"./rng.js\");\nvar _rngJsDefault = parcelHelpers.interopDefault(_rngJs);\nvar _stringifyJs = require(\"./stringify.js\");\nfunction v4(options, buf, offset) {\n    if ((0, _nativeJsDefault.default).randomUUID && !buf && !options) return (0, _nativeJsDefault.default).randomUUID();\n    options = options || {};\n    const rnds = options.random || (options.rng || (0, _rngJsDefault.default))(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n    if (buf) {\n        offset = offset || 0;\n        for(let i = 0; i < 16; ++i)buf[offset + i] = rnds[i];\n        return buf;\n    }\n    return (0, _stringifyJs.unsafeStringify)(rnds);\n}\nexports.default = v4;\n\n},{\"./native.js\":\"2mj2P\",\"./rng.js\":\"lpvWd\",\"./stringify.js\":\"fHrI1\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"2mj2P\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nconst randomUUID = typeof crypto !== \"undefined\" && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexports.default = {\n    randomUUID\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, \"__esModule\", {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === \"default\" || key === \"__esModule\" || dest.hasOwnProperty(key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}],\"lpvWd\":[function(require,module,exports) {\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"default\", ()=>rng);\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n    // lazy load so that environments that need to polyfill have a chance to do so\n    if (!getRandomValues) {\n        // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n        getRandomValues = typeof crypto !== \"undefined\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n        if (!getRandomValues) throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n    }\n    return getRandomValues(rnds8);\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"fHrI1\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"unsafeStringify\", ()=>unsafeStringify);\nvar _validateJs = require(\"./validate.js\");\nvar _validateJsDefault = parcelHelpers.interopDefault(_validateJs);\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */ const byteToHex = [];\nfor(let i = 0; i < 256; ++i)byteToHex.push((i + 0x100).toString(16).slice(1));\nfunction unsafeStringify(arr, offset = 0) {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n    if (!(0, _validateJsDefault.default)(uuid)) throw TypeError(\"Stringified UUID is invalid\");\n    return uuid;\n}\nexports.default = stringify;\n\n},{\"./validate.js\":\"d35r5\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"d35r5\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _regexJs = require(\"./regex.js\");\nvar _regexJsDefault = parcelHelpers.interopDefault(_regexJs);\nfunction validate(uuid) {\n    return typeof uuid === \"string\" && (0, _regexJsDefault.default).test(uuid);\n}\nexports.default = validate;\n\n},{\"./regex.js\":\"agidw\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"agidw\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nexports.default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"bGTnF\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"DIRTY_ELEMENTS_KEY\", ()=>DIRTY_ELEMENTS_KEY);\nparcelHelpers.export(exports, \"UnloadHandlerElement\", ()=>UnloadHandlerElement);\nconst DIRTY_ELEMENTS_KEY = \"dirty-elements\";\nclass UnloadHandlerElement extends HTMLElement {\n    constructor(){\n        super();\n        this.boundBeforeUnloadHandler = this.handleBeforeUnload.bind(this);\n    }\n    static get observedAttributes() {\n        return [\n            \"dirty-elements\"\n        ];\n    }\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name === \"dirty-elements\") {\n            if (newValue) this.triggerBeforeUnload();\n            else this.removeBeforeUnload();\n        }\n    }\n    triggerBeforeUnload() {\n        if (!window.onbeforeunload) window.onbeforeunload = this.boundBeforeUnloadHandler;\n    }\n    removeBeforeUnload() {\n        if (window.onbeforeunload) window.onbeforeunload = null;\n    }\n    handleBeforeUnload(event) {\n        console.log(event);\n        console.log(event.composedPath());\n        event.preventDefault();\n        event.returnValue = \"\";\n    }\n}\nwindow.customElements.define(\"unload-handler\", UnloadHandlerElement);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"3MJok\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"AutoSaveCheckboxElement\", ()=>AutoSaveCheckboxElement);\nvar _baseAutoSaveElement = require(\"elements/BaseAutoSaveElement\");\nclass AutoSaveCheckboxElement extends (0, _baseAutoSaveElement.BaseAutoSaveElement) {\n    constructor(){\n        super();\n        this.boundMarkClean = this.markClean.bind(this);\n        const formElement = this.inputElement.form;\n        if (!formElement) return;\n        this.formElement = formElement;\n    }\n    connectedCallback() {\n        this.inputElement.addEventListener(\"input\", this.boundInputHandler);\n        if (this.formElement) this.formElement.addEventListener(\"submit\", this.boundMarkClean);\n    }\n    disconnectedCallback() {\n        this.inputElement.removeEventListener(\"input\", this.boundInputHandler);\n        if (this.formElement) this.formElement.removeEventListener(\"submit\", this.boundMarkClean);\n    }\n    handleInput() {\n        const isChecked = this.inputElement.checked;\n        const value = isChecked ? this.inputElement.value : \"\";\n        const formElement = this.inputElement.form;\n        if (!formElement) {\n            this.markDirty();\n            return;\n        }\n        const formAction = formElement.getAttribute(\"action\");\n        if (!formAction) return;\n        const method = new FormData(formElement).get(\"_method\")?.toString() || \"\";\n        if ([\n            \"PUT\",\n            \"PATCH\"\n        ].includes(method)) this.patch(formAction, value).then(()=>{\n            window.location.reload();\n        }).catch(()=>{\n            this.markDirty();\n        });\n        else if (this.inputElement.checked !== this.inputElement.defaultChecked) this.markDirty();\n        else this.markClean();\n    }\n}\nwindow.customElements.define(\"auto-save-checkbox\", AutoSaveCheckboxElement);\n\n},{\"elements/BaseAutoSaveElement\":\"gOsXZ\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"8q7LM\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"AutoSaveSearchElement\", ()=>AutoSaveSearchElement);\nvar _debounce = require(\"debounce\");\nvar _debounceDefault = parcelHelpers.interopDefault(_debounce);\nvar _baseAutoSaveElement = require(\"elements/BaseAutoSaveElement\");\nclass AutoSaveSearchElement extends (0, _baseAutoSaveElement.BaseAutoSaveElement) {\n    connectedCallback() {\n        this.inputElement.addEventListener(\"input\", this.debouncedInputHandler);\n    }\n    disconnectedCallback() {\n        this.inputElement.removeEventListener(\"input\", this.debouncedInputHandler);\n    }\n    handleInput() {\n        const formElement = this.inputElement.form;\n        if (!formElement) return;\n        formElement.submit();\n    }\n    constructor(...args){\n        super(...args);\n        this.debouncedInputHandler = (0, _debounceDefault.default)(this.boundInputHandler, 350);\n    }\n}\nwindow.customElements.define(\"auto-save-search\", AutoSaveSearchElement);\n\n},{\"debounce\":\"7Bek2\",\"elements/BaseAutoSaveElement\":\"gOsXZ\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"7Bek2\":[function(require,module,exports) {\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */ function debounce(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n    if (null == wait) wait = 100;\n    function later() {\n        var last = Date.now() - timestamp;\n        if (last < wait && last >= 0) timeout = setTimeout(later, wait - last);\n        else {\n            timeout = null;\n            if (!immediate) {\n                result = func.apply(context, args);\n                context = args = null;\n            }\n        }\n    }\n    var debounced = function() {\n        context = this;\n        args = arguments;\n        timestamp = Date.now();\n        var callNow = immediate && !timeout;\n        if (!timeout) timeout = setTimeout(later, wait);\n        if (callNow) {\n            result = func.apply(context, args);\n            context = args = null;\n        }\n        return result;\n    };\n    debounced.clear = function() {\n        if (timeout) {\n            clearTimeout(timeout);\n            timeout = null;\n        }\n    };\n    debounced.flush = function() {\n        if (timeout) {\n            result = func.apply(context, args);\n            context = args = null;\n            clearTimeout(timeout);\n            timeout = null;\n        }\n    };\n    return debounced;\n}\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\nmodule.exports = debounce;\n\n},{}],\"foex1\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"ClearSearchElement\", ()=>ClearSearchElement);\nclass ClearSearchElement extends HTMLElement {\n    connectedCallback() {\n        const buttonElement = this.querySelector(\"button\");\n        if (!(buttonElement instanceof HTMLButtonElement)) throw new Error(\"No button element provided\");\n        const formElement = buttonElement.form;\n        if (!(formElement instanceof HTMLFormElement)) throw new Error(\"No form element provided\");\n        function guardIsHTMLSearchInputElement(node) {\n            return node instanceof HTMLInputElement && node.type === \"search\";\n        }\n        const searchInputElement = Array.from(formElement.elements).find(guardIsHTMLSearchInputElement);\n        if (!searchInputElement) throw new Error(\"No search input element provided\");\n        this.buttonElement = buttonElement;\n        this.formElement = formElement;\n        this.searchInputElement = searchInputElement;\n        this.buttonElement.addEventListener(\"click\", this.boundClickHandler);\n    }\n    disconnectedCallback() {\n        if (this.buttonElement) this.buttonElement.removeEventListener(\"click\", this.boundClickHandler);\n    }\n    handleClick() {\n        if (!this.searchInputElement) throw new Error(\"No search input element provided\");\n        if (!this.formElement) throw new Error(\"No form element provided\");\n        this.searchInputElement.removeAttribute(\"name\");\n        this.formElement.submit();\n    }\n    constructor(...args){\n        super(...args);\n        this.boundClickHandler = this.handleClick.bind(this);\n    }\n}\nwindow.customElements.define(\"clear-search\", ClearSearchElement);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"cKAw4\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"PostFormElement\", ()=>PostFormElement);\nvar _unloadHandlerElement = require(\"elements/UnloadHandlerElement\");\nclass PostFormElement extends HTMLElement {\n    connectedCallback() {\n        const formElement = this.querySelector(\"form\");\n        if (!(formElement instanceof HTMLFormElement)) throw new Error(\"PostFormElement must contain a form element\");\n        this.formElement = formElement;\n        this.formElement.addEventListener(\"submit\", this.boundSubmitHandler);\n    }\n    disconnectedCallback() {\n        if (!this.formElement) return;\n        this.formElement.removeEventListener(\"submit\", this.boundSubmitHandler);\n    }\n    handleFormSubmit(event) {\n        event.preventDefault();\n        if (!this.formElement) return;\n        const unloadHandler = window.document.querySelector(\"unload-handler\");\n        if (!unloadHandler) return;\n        const prev = unloadHandler.getAttribute((0, _unloadHandlerElement.DIRTY_ELEMENTS_KEY)) || \"\";\n        const dirtyElementsArray = !prev ? [] : prev.split(\",\");\n        const formElements = Array.from(this.formElement.elements);\n        const dirtyElementsString = dirtyElementsArray.filter((id)=>{\n            const formElement = window.document.getElementById(id);\n            return formElement && !formElements.includes(formElement);\n        }).join(\",\");\n        unloadHandler.setAttribute((0, _unloadHandlerElement.DIRTY_ELEMENTS_KEY), dirtyElementsString);\n        this.formElement.submit();\n    }\n    constructor(...args){\n        super(...args);\n        this.boundSubmitHandler = this.handleFormSubmit.bind(this);\n    }\n}\nwindow.customElements.define(\"post-form\", PostFormElement);\n\n},{\"elements/UnloadHandlerElement\":\"bGTnF\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"enxk1\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"SelectAllCheckboxElement\", ()=>SelectAllCheckboxElement);\nclass SelectAllCheckboxElement extends HTMLElement {\n    constructor(){\n        super();\n        this.boundChangeHandler = this.handleChange.bind(this);\n        this.boundControllableCheckboxChangeHandler = this.handleControllableCheckboxChange.bind(this);\n        if (!this.shadowRoot) throw new Error(\"Declarative shadow root not supported\");\n        const inputElement = this.querySelector(\"input\");\n        if (!(inputElement instanceof HTMLInputElement)) throw new Error(\"No input element provided\");\n        const formElement = inputElement.form;\n        if (!formElement) throw new Error(\"No form element provided\");\n        const inputName = inputElement.getAttribute(\"name\");\n        inputElement.removeAttribute(\"name\");\n        function isControllableCheckboxElement(element) {\n            return element instanceof HTMLInputElement && element.type === \"checkbox\" && element.name === inputName;\n        }\n        this.checkboxElements = Array.from(formElement.elements).filter(isControllableCheckboxElement);\n        this.inputElement = inputElement;\n        this.formElement = formElement;\n    }\n    connectedCallback() {\n        this.inputElement.addEventListener(\"change\", this.boundChangeHandler);\n        for (const checkboxFormElement of this.checkboxElements)checkboxFormElement.addEventListener(\"change\", this.boundControllableCheckboxChangeHandler);\n    }\n    disconnectedCallback() {\n        this.inputElement.removeEventListener(\"change\", this.boundChangeHandler);\n        for (const checkboxFormElement of this.checkboxElements)checkboxFormElement.removeEventListener(\"change\", this.boundControllableCheckboxChangeHandler);\n    }\n    handleChange() {\n        const isChecked = this.inputElement.checked;\n        for (const checkboxFormElement of this.checkboxElements)checkboxFormElement.checked = isChecked;\n    }\n    handleControllableCheckboxChange() {\n        const isAllChecked = this.checkboxElements.every((checkboxFormElement)=>checkboxFormElement.checked);\n        this.inputElement.checked = isAllChecked;\n    }\n}\nwindow.customElements.define(\"select-all-checkbox\", SelectAllCheckboxElement);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"a0B3I\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"GridKeyboardNavigationElement\", ()=>GridKeyboardNavigationElement);\nconst FOCUSABLE_ELEMENTS_SELECTOR = 'input:not([type=\"hidden\"]):not([hidden]), button:not([hidden]), a:not([hidden]), textarea:not([hidden]), select:not([hidden]), [tabindex]:not([hidden])';\nconst FOCUS_STORAGE_KEY = \"focus-element-id\";\nclass GridKeyboardNavigationElement extends HTMLElement {\n    constructor(){\n        super();\n        this.boundKeydownHandler = this.handleKeydown.bind(this);\n        this.boundFocusinHandler = this.handleFocusin.bind(this);\n        this.boundFocusoutHandler = this.handleFocusout.bind(this);\n        this.setInitialTabIndices();\n        this.addEventListener(\"auto-save-text:toggle-edit-mode\", (event)=>{\n            if (!(event instanceof CustomEvent)) return;\n            const target = event.target;\n            if (!(target instanceof HTMLElement)) return;\n            const cellElement = target.closest(\"td, th\");\n            if (!(cellElement instanceof HTMLElement)) return;\n            const rowElement = cellElement.closest(\"tr\");\n            if (!(rowElement instanceof HTMLElement)) return;\n            const cellIndex = Array.from(rowElement.children).indexOf(cellElement);\n            const nextRowElement = rowElement.nextElementSibling;\n            if (!(nextRowElement instanceof HTMLElement)) return;\n            const nextCellElement = nextRowElement.children[cellIndex];\n            if (!(nextCellElement instanceof HTMLElement)) return;\n            const nextFocusableElement = nextCellElement.querySelector(FOCUSABLE_ELEMENTS_SELECTOR);\n            if (!(nextFocusableElement instanceof HTMLElement)) return;\n            nextFocusableElement.focus();\n        });\n    }\n    setInitialTabIndices() {\n        const focusableElements = Array.from(this.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR));\n        for (const focusableElement of focusableElements){\n            if (focusableElement instanceof HTMLElement) focusableElement.dataset.originalTabindex = focusableElement.tabIndex.toString();\n            focusableElement.setAttribute(\"tabindex\", \"-1\");\n        }\n        const autofocusElement = this.querySelector('[data-auto-focus=\"true\"]');\n        const focusElementId = sessionStorage.getItem(FOCUS_STORAGE_KEY) || \"\";\n        const focusElement = focusElementId ? this.querySelector(`#${focusElementId}`) : null;\n        const autoFocusedElement = autofocusElement || focusElement;\n        if (autoFocusedElement instanceof HTMLElement) return;\n        const firstRow = this.querySelector(\"tr\");\n        if (!firstRow) return;\n        const firstCell = firstRow.querySelector(\"td, th\");\n        if (!firstCell) return;\n        const firstCellFocusableElements = Array.from(firstCell.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR));\n        const [firstFocusableElement] = firstCellFocusableElements;\n        if (!(firstFocusableElement instanceof HTMLElement)) return;\n        firstFocusableElement.setAttribute(\"tabindex\", firstFocusableElement.dataset.originalTabindex || \"0\");\n    }\n    connectedCallback() {\n        this.addEventListener(\"keydown\", this.boundKeydownHandler);\n        this.addEventListener(\"focusin\", this.boundFocusinHandler);\n        this.addEventListener(\"focusout\", this.boundFocusoutHandler);\n    }\n    disconnected() {\n        this.removeEventListener(\"keydown\", this.boundKeydownHandler);\n        this.removeEventListener(\"focusin\", this.boundFocusinHandler);\n        this.removeEventListener(\"focusout\", this.boundFocusoutHandler);\n    }\n    handleFocusin(event) {\n        if (!(event instanceof FocusEvent)) return;\n        const cellElement = event.composedPath().find((element)=>{\n            return element instanceof HTMLElement && element.matches(\"td, th\");\n        });\n        if (!(cellElement instanceof HTMLElement)) return;\n        const focusableElements = Array.from(cellElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR));\n        for (const focusableElement of focusableElements)if (focusableElement instanceof HTMLElement) focusableElement.setAttribute(\"tabindex\", focusableElement.dataset.originalTabindex || \"0\");\n    }\n    async handleFocusout(event) {\n        if (!(event instanceof FocusEvent)) return;\n        const previousCellElement = event.composedPath().find((element)=>{\n            return element instanceof HTMLElement && element.matches(\"td, th\");\n        });\n        const focusedElement = window.document.activeElement;\n        const focusedCellElement = focusedElement && this.contains(focusedElement) ? focusedElement.closest(\"td, th\") : null;\n        const unfocusedCellElements = Array.from(this.querySelectorAll(\"td, th\")).filter((cellElement)=>{\n            return cellElement !== (focusedCellElement || previousCellElement);\n        });\n        for (const unfocusedCellElement of unfocusedCellElements){\n            const focusableElements = Array.from(unfocusedCellElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR));\n            for (const focusableElement of focusableElements)if (focusableElement instanceof HTMLElement) focusableElement.setAttribute(\"tabindex\", \"-1\");\n        }\n    }\n    handleKeydown(event) {\n        if (!(event instanceof KeyboardEvent)) return;\n        const target = event.composedPath().find((element)=>{\n            return element instanceof HTMLElement && element.matches(\"td, th\");\n        });\n        if (!(target instanceof HTMLElement)) return;\n        const cellElement = target.closest(\"td, th\");\n        if (!(cellElement instanceof HTMLElement)) return;\n        const editableAutoSaveTextInputElement = event.composedPath().find((element)=>{\n            return element instanceof HTMLInputElement && element.closest(\"auto-save-text\") && !element.readOnly;\n        });\n        if (editableAutoSaveTextInputElement) return;\n        if (event.key === \"ArrowUp\") {\n            event.preventDefault();\n            this.handleArrowUp(cellElement);\n        } else if (event.key === \"ArrowDown\") {\n            event.preventDefault();\n            this.handleArrowDown(cellElement);\n        } else if (event.key === \"ArrowLeft\") {\n            event.preventDefault();\n            this.handleArrowLeft(cellElement);\n        } else if (event.key === \"ArrowRight\") {\n            event.preventDefault();\n            this.handleArrowRight(cellElement);\n        }\n    }\n    handleArrowUp(cellElement) {\n        const rowElement = cellElement.closest(\"tr\");\n        if (!rowElement) return;\n        const cellIndex = Array.from(rowElement.children).indexOf(cellElement);\n        const tableElement = rowElement.closest(\"table\");\n        if (!(tableElement instanceof HTMLElement)) return;\n        const rowElements = Array.from(tableElement.querySelectorAll(\"tr\"));\n        const rowIndex = rowElements.indexOf(rowElement);\n        const targetRowElement = rowElements[rowIndex - 1];\n        if (!(targetRowElement instanceof HTMLElement)) return;\n        const targetRowElementCells = Array.from(targetRowElement.children);\n        const targetCellElement = targetRowElementCells[Math.min(targetRowElementCells.length - 1, cellIndex)];\n        if (!(targetCellElement instanceof HTMLElement)) return;\n        this.focusElement(targetCellElement);\n    }\n    handleArrowDown(cellElement) {\n        const rowElement = cellElement.closest(\"tr\");\n        if (!rowElement) return;\n        const cellIndex = Array.from(rowElement.children).indexOf(cellElement);\n        const tableElement = rowElement.closest(\"table\");\n        if (!(tableElement instanceof HTMLElement)) return;\n        const rowElements = Array.from(tableElement.querySelectorAll(\"tr\"));\n        const rowIndex = rowElements.indexOf(rowElement);\n        const targetRowElement = rowElements[rowIndex + 1];\n        if (!(targetRowElement instanceof HTMLElement)) return;\n        const targetRowElementCells = Array.from(targetRowElement.children);\n        const targetCellElement = targetRowElementCells[Math.min(targetRowElementCells.length - 1, cellIndex)];\n        if (!(targetCellElement instanceof HTMLElement)) return;\n        this.focusElement(targetCellElement);\n    }\n    handleArrowLeft(cellElement) {\n        const previousCellElement = cellElement.previousElementSibling;\n        if (!(previousCellElement instanceof HTMLElement)) return;\n        this.focusElement(previousCellElement);\n    }\n    handleArrowRight(cellElement) {\n        const nextCellElement = cellElement.nextElementSibling;\n        if (!(nextCellElement instanceof HTMLElement)) return;\n        this.focusElement(nextCellElement);\n    }\n    focusElement(targetCellElement) {\n        const targetCellElementFocusableElements = Array.from(targetCellElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR));\n        const [firstFocusableElement] = targetCellElementFocusableElements;\n        if (firstFocusableElement instanceof HTMLElement) firstFocusableElement.focus();\n    }\n}\nwindow.customElements.define(\"grid-keyboard-navigation\", GridKeyboardNavigationElement);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"4HvQn\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"ModalDialogElement\", ()=>ModalDialogElement);\nclass ModalDialogElement extends HTMLElement {\n    constructor(){\n        super();\n        this.boundKeydownHandler = this.handleKeydown.bind(this);\n        const dialogElement = this.querySelector(\"dialog\");\n        if (!(dialogElement instanceof HTMLDialogElement)) throw new Error(\"Could not find dialog element\");\n        this.dialogElement = dialogElement;\n    }\n    connectedCallback() {\n        this.addEventListener(\"keydown\", this.boundKeydownHandler);\n    }\n    disconnectedCallback() {\n        this.removeEventListener(\"keydown\", this.boundKeydownHandler);\n    }\n    handleKeydown(event) {\n        if (!(event instanceof KeyboardEvent)) return;\n        if (event.key === \"Escape\") {\n            const closeDialogFormElement = this.dialogElement.querySelector(\"form\");\n            if (!(closeDialogFormElement instanceof HTMLFormElement)) return;\n            closeDialogFormElement.submit();\n        }\n    }\n}\nwindow.customElements.define(\"modal-dialog\", ModalDialogElement);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"41FSx\":[function(require,module,exports) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"FlyoutMenuElement\", ()=>FlyoutMenuElement);\nclass FlyoutMenuElement extends HTMLElement {\n    constructor(){\n        super();\n        this.boundKeydownHandler = this.handleKeydown.bind(this);\n        if (!this.shadowRoot) throw new Error(\"Could not attach shadow root\");\n        const detailsElement = this.shadowRoot.querySelector(\"details\");\n        if (!(detailsElement instanceof HTMLDetailsElement)) throw new Error(\"Could not find details element\");\n        this.detailsElement = detailsElement;\n    }\n    connectedCallback() {\n        this.addEventListener(\"keydown\", this.boundKeydownHandler);\n    }\n    disconnectedCallback() {\n        this.removeEventListener(\"keydown\", this.boundKeydownHandler);\n    }\n    handleKeydown(event) {\n        if (!(event instanceof KeyboardEvent)) return;\n        if (event.key === \"Escape\") this.detailsElement.open = false;\n    }\n}\nwindow.customElements.define(\"flyout-menu\", FlyoutMenuElement);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}]},[\"gUvsp\"], \"gUvsp\", \"parcelRequireb585\")\n\n//# sourceMappingURL=client.js.map\n","import 'elements/AutoSaveTextElement';\r\nimport 'elements/AutoSaveCheckboxElement';\r\nimport 'elements/AutoSaveSearchElement';\r\nimport 'elements/ClearSearchElement';\r\nimport 'elements/UnloadHandlerElement';\r\nimport 'elements/PostFormElement';\r\nimport 'elements/SelectAllCheckboxElement';\r\nimport 'elements/GridKeyboardNavigationElement';\r\nimport 'elements/ModalDialogElement';\r\nimport 'elements/FlyoutMenuElement';\r\n\r\nconst SCROLL_STORAGE_KEY = 'scroll-position-y';\r\nconst FOCUS_STORAGE_KEY = 'focus-element-id';\r\n\r\nconst windowY = sessionStorage.getItem(SCROLL_STORAGE_KEY) || 0;\r\nwindow.scrollTo(0, Number(windowY));\r\n\r\nconst autofocusElement = window.document.querySelector(\r\n  '[data-auto-focus=\"true\"]',\r\n);\r\nconst focusElementId = sessionStorage.getItem(FOCUS_STORAGE_KEY) || '';\r\nconst focusElement = window.document.getElementById(focusElementId);\r\nconst elementToAutoFocus = autofocusElement || focusElement;\r\n\r\nif (elementToAutoFocus instanceof HTMLElement) {\r\n  elementToAutoFocus.focus();\r\n\r\n  if (\r\n    elementToAutoFocus instanceof HTMLInputElement &&\r\n    elementToAutoFocus.value.length > 0 &&\r\n    (elementToAutoFocus.type === 'text' || elementToAutoFocus.type === 'search')\r\n  ) {\r\n    elementToAutoFocus.selectionStart = elementToAutoFocus.selectionEnd =\r\n      elementToAutoFocus.value.length;\r\n  }\r\n}\r\n\r\nconst handleScroll = () => {\r\n  window.sessionStorage.setItem(SCROLL_STORAGE_KEY, `${window.scrollY}`);\r\n};\r\n\r\nwindow.addEventListener('scroll', handleScroll);\r\n\r\nconst handleFocus = () => {\r\n  sessionStorage.setItem(\r\n    FOCUS_STORAGE_KEY,\r\n    window.document.activeElement?.id || '',\r\n  );\r\n};\r\n\r\nwindow.document.body.addEventListener('focusin', handleFocus);\r\n","import { BaseAutoSaveElement } from 'elements/BaseAutoSaveElement';\r\n\r\nexport class AutoSaveTextElement extends BaseAutoSaveElement {\r\n  private boundKeydownHandler = this.handleKeydown.bind(this);\r\n  private boundClickHandler = this.handleClick.bind(this);\r\n  private boundBlurHandler = this.handleBlur.bind(this);\r\n\r\n  connectedCallback() {\r\n    this.inputElement.addEventListener('pointerdown', this.boundClickHandler);\r\n    this.inputElement.addEventListener('change', this.boundChangeHandler);\r\n    this.inputElement.addEventListener('keydown', this.boundKeydownHandler);\r\n    this.inputElement.addEventListener('blur', this.boundBlurHandler);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.inputElement.removeEventListener(\r\n      'pointerdown',\r\n      this.boundClickHandler,\r\n    );\r\n    this.inputElement.removeEventListener('change', this.boundChangeHandler);\r\n    this.inputElement.removeEventListener('keydown', this.boundKeydownHandler);\r\n    this.inputElement.removeEventListener('blur', this.boundBlurHandler);\r\n  }\r\n\r\n  handleClick() {\r\n    if (this.inputElement.readOnly) {\r\n      this.toggleEditMode();\r\n    }\r\n  }\r\n\r\n  handleBlur() {\r\n    if (!this.inputElement.readOnly) {\r\n      this.toggleEditMode();\r\n    }\r\n  }\r\n\r\n  handleKeydown(event: Event) {\r\n    if (!(event instanceof KeyboardEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === 'Escape') {\r\n      if (!this.inputElement.readOnly) {\r\n        const currentValue = this.inputElement.value;\r\n        const savedValue = this.inputElement.getAttribute('value') || '';\r\n\r\n        if (currentValue === savedValue) {\r\n          this.toggleEditMode();\r\n        } else {\r\n          this.inputElement.value =\r\n            this.inputElement.getAttribute('value') || '';\r\n        }\r\n      }\r\n    }\r\n\r\n    if (event.key === 'Enter') {\r\n      this.toggleEditMode();\r\n\r\n      event.preventDefault();\r\n\r\n      if (this.inputElement.readOnly) {\r\n        this.dispatchEvent(\r\n          new CustomEvent('auto-save-text:toggle-edit-mode', {\r\n            composed: true,\r\n            bubbles: true,\r\n          }),\r\n        );\r\n      } else {\r\n        this.inputElement.selectionStart = this.inputElement.selectionEnd =\r\n          this.inputElement.value.length;\r\n      }\r\n    }\r\n\r\n    if (event.key.length === 1 && /[a-zA-Z0-9-_ ]/.test(event.key)) {\r\n      if (this.inputElement.readOnly) {\r\n        this.toggleEditMode();\r\n        this.inputElement.value = '';\r\n        this.inputElement.selectionStart = this.inputElement.selectionEnd =\r\n          this.inputElement.value.length;\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleEditMode() {\r\n    this.inputElement.readOnly = !this.inputElement.readOnly;\r\n  }\r\n\r\n  override handleChange() {\r\n    const value = this.inputElement.value;\r\n    const formElement = this.inputElement.form;\r\n\r\n    if (!formElement) {\r\n      this.markDirty();\r\n      return;\r\n    }\r\n\r\n    const formAction = formElement.getAttribute('action');\r\n\r\n    if (!formAction) {\r\n      return;\r\n    }\r\n\r\n    const method = new FormData(formElement).get('_method')?.toString() || '';\r\n\r\n    if (['PUT', 'PATCH'].includes(method)) {\r\n      this.patch(formAction, value)\r\n        .then(() => {\r\n          this.inputElement.setAttribute('value', value);\r\n        })\r\n        .catch(() => {\r\n          this.markDirty();\r\n        });\r\n    } else {\r\n      this.markDirty();\r\n    }\r\n  }\r\n}\r\n\r\nwindow.customElements.define('auto-save-text', AutoSaveTextElement);\r\n","import { getUniqueId } from 'shared/getUniqueId';\r\nimport { DIRTY_ELEMENTS_KEY } from 'elements/UnloadHandlerElement';\r\n\r\nexport class BaseAutoSaveElement extends HTMLElement {\r\n  protected inputElement: HTMLInputElement;\r\n  protected inputId: string;\r\n  protected unloadHandlerElement: HTMLElement;\r\n  protected boundChangeHandler: (event: Event) => void;\r\n  protected boundInputHandler: (event: Event) => void;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    if (!this.shadowRoot) {\r\n      throw new Error('Declarative shadow root not supported');\r\n    }\r\n\r\n    const slotElement = this.shadowRoot.querySelector('slot');\r\n\r\n    if (!(slotElement instanceof HTMLSlotElement)) {\r\n      throw new Error('No slot element provided');\r\n    }\r\n\r\n    const assignedNodes = slotElement.assignedNodes();\r\n\r\n    if (!assignedNodes || !assignedNodes.length) {\r\n      throw new Error('No content provided');\r\n    }\r\n\r\n    function guardIsHTMLInputElement(node: Node): node is HTMLInputElement {\r\n      return node instanceof HTMLInputElement;\r\n    }\r\n\r\n    const inputElement = assignedNodes.find(guardIsHTMLInputElement);\r\n\r\n    if (!inputElement) {\r\n      throw new Error('No input element provided');\r\n    }\r\n\r\n    const unloadHandlerElement =\r\n      window.document.querySelector('unload-handler');\r\n\r\n    if (!(unloadHandlerElement instanceof HTMLElement)) {\r\n      throw new Error('No unload handler element found');\r\n    }\r\n\r\n    this.inputElement = inputElement;\r\n    this.inputId = inputElement.id || getUniqueId();\r\n    this.unloadHandlerElement = unloadHandlerElement;\r\n    this.boundChangeHandler = this.handleChange.bind(this);\r\n    this.boundInputHandler = this.handleInput.bind(this);\r\n  }\r\n\r\n  protected handleChange() {}\r\n\r\n  protected handleInput() {}\r\n\r\n  protected markDirty() {\r\n    const prev =\r\n      this.unloadHandlerElement.getAttribute(DIRTY_ELEMENTS_KEY) || '';\r\n    const dirtyElementsArray = !prev ? [] : prev.split(',');\r\n    dirtyElementsArray.push(this.inputId);\r\n    const uniqueDirtyElementsArray = Array.from(new Set(dirtyElementsArray));\r\n    const dirtyElementsString = uniqueDirtyElementsArray.join(',');\r\n    this.unloadHandlerElement.setAttribute(\r\n      DIRTY_ELEMENTS_KEY,\r\n      dirtyElementsString,\r\n    );\r\n    this.inputElement.setAttribute('data-dirty', '');\r\n  }\r\n\r\n  protected markClean() {\r\n    const prev =\r\n      this.unloadHandlerElement.getAttribute(DIRTY_ELEMENTS_KEY) || '';\r\n    const dirtyElementsArray = !prev ? [] : prev.split(',');\r\n    const dirtyElementsString = dirtyElementsArray\r\n      .filter((id) => id !== this.inputId)\r\n      .join(',');\r\n    this.unloadHandlerElement.setAttribute(\r\n      DIRTY_ELEMENTS_KEY,\r\n      dirtyElementsString,\r\n    );\r\n    this.inputElement.removeAttribute('data-dirty');\r\n  }\r\n\r\n  protected async patch(url: string, value: string) {\r\n    const formData = new FormData();\r\n    formData.append('_method', 'PATCH');\r\n    formData.append(this.inputElement.name, value);\r\n\r\n    return window\r\n      .fetch(url, {\r\n        method: 'POST',\r\n        body: formData,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 404) {\r\n          throw new Error('Not found');\r\n        }\r\n\r\n        return res;\r\n      });\r\n  }\r\n}\r\n","import { v4 as uuid } from 'uuid';\n\nexport function getUniqueId() {\n  return `${Date.now()}-${uuid()}`;\n}\n","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","export const DIRTY_ELEMENTS_KEY = 'dirty-elements';\n\nexport class UnloadHandlerElement extends HTMLElement {\n  constructor() {\n    super();\n  }\n\n  static get observedAttributes() {\n    return ['dirty-elements'];\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (name === 'dirty-elements') {\n      if (newValue) {\n        this.triggerBeforeUnload();\n      } else {\n        this.removeBeforeUnload();\n      }\n    }\n  }\n\n  triggerBeforeUnload() {\n    if (!window.onbeforeunload) {\n      window.onbeforeunload = this.boundBeforeUnloadHandler;\n    }\n  }\n\n  removeBeforeUnload() {\n    if (window.onbeforeunload) {\n      window.onbeforeunload = null;\n    }\n  }\n\n  handleBeforeUnload(event: BeforeUnloadEvent) {\n    console.log(event);\n    console.log(event.composedPath());\n    event.preventDefault();\n    event.returnValue = '';\n  }\n\n  private boundBeforeUnloadHandler = this.handleBeforeUnload.bind(this);\n}\n\nwindow.customElements.define('unload-handler', UnloadHandlerElement);\n","import escapeStringRegexp from 'escape-string-regexp';\nimport { BaseAutoSaveElement } from 'elements/BaseAutoSaveElement';\n\nexport class AutoSaveCheckboxElement extends BaseAutoSaveElement {\n  private formElement: HTMLFormElement | undefined;\n  private boundMarkClean = this.markClean.bind(this);\n\n  constructor() {\n    super();\n\n    const formElement = this.inputElement.form;\n\n    if (!formElement) {\n      return;\n    }\n\n    this.formElement = formElement;\n  }\n\n  connectedCallback() {\n    this.inputElement.addEventListener('input', this.boundInputHandler);\n\n    if (this.formElement) {\n      this.formElement.addEventListener('submit', this.boundMarkClean);\n    }\n  }\n\n  disconnectedCallback() {\n    this.inputElement.removeEventListener('input', this.boundInputHandler);\n\n    if (this.formElement) {\n      this.formElement.removeEventListener('submit', this.boundMarkClean);\n    }\n  }\n\n  override handleInput() {\n    const isChecked = this.inputElement.checked;\n    const value = isChecked ? this.inputElement.value : '';\n    const formElement = this.inputElement.form;\n\n    if (!formElement) {\n      this.markDirty();\n      return;\n    }\n\n    const formAction = formElement.getAttribute('action');\n\n    if (!formAction) {\n      return;\n    }\n\n    const method = new FormData(formElement).get('_method')?.toString() || '';\n\n    if (['PUT', 'PATCH'].includes(method)) {\n      this.patch(formAction, value)\n        .then(() => {\n          window.location.reload();\n        })\n        .catch(() => {\n          this.markDirty();\n        });\n    } else {\n      if (this.inputElement.checked !== this.inputElement.defaultChecked) {\n        this.markDirty();\n      } else {\n        this.markClean();\n      }\n    }\n  }\n}\n\nwindow.customElements.define('auto-save-checkbox', AutoSaveCheckboxElement);\n","import debounce from 'debounce';\r\nimport { BaseAutoSaveElement } from 'elements/BaseAutoSaveElement';\r\n\r\nexport class AutoSaveSearchElement extends BaseAutoSaveElement {\r\n  private debouncedInputHandler = debounce(this.boundInputHandler, 350);\r\n\r\n  connectedCallback() {\r\n    this.inputElement.addEventListener('input', this.debouncedInputHandler);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.inputElement.removeEventListener('input', this.debouncedInputHandler);\r\n  }\r\n\r\n  override handleInput() {\r\n    const formElement = this.inputElement.form;\r\n\r\n    if (!formElement) {\r\n      return;\r\n    }\r\n\r\n    formElement.submit();\r\n  }\r\n}\r\n\r\nwindow.customElements.define('auto-save-search', AutoSaveSearchElement);\r\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","export class ClearSearchElement extends HTMLElement {\r\n  private buttonElement?: HTMLButtonElement;\r\n  private formElement?: HTMLFormElement;\r\n  private searchInputElement?: HTMLInputElement & {\r\n    type: 'search';\r\n  };\r\n  private boundClickHandler = this.handleClick.bind(this);\r\n\r\n  connectedCallback() {\r\n    const buttonElement = this.querySelector('button');\r\n\r\n    if (!(buttonElement instanceof HTMLButtonElement)) {\r\n      throw new Error('No button element provided');\r\n    }\r\n\r\n    const formElement = buttonElement.form;\r\n\r\n    if (!(formElement instanceof HTMLFormElement)) {\r\n      throw new Error('No form element provided');\r\n    }\r\n\r\n    function guardIsHTMLSearchInputElement(\r\n      node: Node,\r\n    ): node is HTMLInputElement & {\r\n      type: 'search';\r\n    } {\r\n      return node instanceof HTMLInputElement && node.type === 'search';\r\n    }\r\n\r\n    const searchInputElement = Array.from(formElement.elements).find(\r\n      guardIsHTMLSearchInputElement,\r\n    );\r\n\r\n    if (!searchInputElement) {\r\n      throw new Error('No search input element provided');\r\n    }\r\n\r\n    this.buttonElement = buttonElement;\r\n    this.formElement = formElement;\r\n    this.searchInputElement = searchInputElement;\r\n\r\n    this.buttonElement.addEventListener('click', this.boundClickHandler);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    if (this.buttonElement) {\r\n      this.buttonElement.removeEventListener('click', this.boundClickHandler);\r\n    }\r\n  }\r\n\r\n  handleClick() {\r\n    if (!this.searchInputElement) {\r\n      throw new Error('No search input element provided');\r\n    }\r\n\r\n    if (!this.formElement) {\r\n      throw new Error('No form element provided');\r\n    }\r\n\r\n    this.searchInputElement.removeAttribute('name');\r\n    this.formElement.submit();\r\n  }\r\n}\r\n\r\nwindow.customElements.define('clear-search', ClearSearchElement);\r\n","import { DIRTY_ELEMENTS_KEY } from 'elements/UnloadHandlerElement';\n\nexport class PostFormElement extends HTMLElement {\n  private formElement?: HTMLFormElement;\n  private boundSubmitHandler = this.handleFormSubmit.bind(this);\n\n  connectedCallback() {\n    const formElement = this.querySelector('form');\n\n    if (!(formElement instanceof HTMLFormElement)) {\n      throw new Error('PostFormElement must contain a form element');\n    }\n\n    this.formElement = formElement;\n    this.formElement.addEventListener('submit', this.boundSubmitHandler);\n  }\n\n  disconnectedCallback() {\n    if (!this.formElement) {\n      return;\n    }\n\n    this.formElement.removeEventListener('submit', this.boundSubmitHandler);\n  }\n\n  handleFormSubmit(event: Event) {\n    event.preventDefault();\n\n    if (!this.formElement) {\n      return;\n    }\n\n    const unloadHandler = window.document.querySelector('unload-handler');\n\n    if (!unloadHandler) {\n      return;\n    }\n\n    const prev = unloadHandler.getAttribute(DIRTY_ELEMENTS_KEY) || '';\n    const dirtyElementsArray = !prev ? [] : prev.split(',');\n\n    const formElements = Array.from(this.formElement.elements);\n\n    const dirtyElementsString = dirtyElementsArray\n      .filter((id) => {\n        const formElement = window.document.getElementById(id);\n        return formElement && !formElements.includes(formElement);\n      })\n      .join(',');\n\n    unloadHandler.setAttribute(DIRTY_ELEMENTS_KEY, dirtyElementsString);\n\n    this.formElement.submit();\n  }\n}\n\nwindow.customElements.define('post-form', PostFormElement);\n","export class SelectAllCheckboxElement extends HTMLElement {\r\n  private inputElement: HTMLInputElement;\r\n  private formElement: HTMLFormElement;\r\n  private checkboxElements: HTMLInputElement[];\r\n  private boundChangeHandler = this.handleChange.bind(this);\r\n  private boundControllableCheckboxChangeHandler =\r\n    this.handleControllableCheckboxChange.bind(this);\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    if (!this.shadowRoot) {\r\n      throw new Error('Declarative shadow root not supported');\r\n    }\r\n\r\n    const inputElement = this.querySelector('input');\r\n\r\n    if (!(inputElement instanceof HTMLInputElement)) {\r\n      throw new Error('No input element provided');\r\n    }\r\n\r\n    const formElement = inputElement.form;\r\n\r\n    if (!formElement) {\r\n      throw new Error('No form element provided');\r\n    }\r\n\r\n    const inputName = inputElement.getAttribute('name');\r\n    inputElement.removeAttribute('name');\r\n\r\n    function isControllableCheckboxElement(\r\n      element: unknown,\r\n    ): element is HTMLInputElement {\r\n      return (\r\n        element instanceof HTMLInputElement &&\r\n        element.type === 'checkbox' &&\r\n        element.name === inputName\r\n      );\r\n    }\r\n\r\n    this.checkboxElements = Array.from(formElement.elements).filter(\r\n      isControllableCheckboxElement,\r\n    );\r\n\r\n    this.inputElement = inputElement;\r\n    this.formElement = formElement;\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.inputElement.addEventListener('change', this.boundChangeHandler);\r\n\r\n    for (const checkboxFormElement of this.checkboxElements) {\r\n      checkboxFormElement.addEventListener(\r\n        'change',\r\n        this.boundControllableCheckboxChangeHandler,\r\n      );\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.inputElement.removeEventListener('change', this.boundChangeHandler);\r\n\r\n    for (const checkboxFormElement of this.checkboxElements) {\r\n      checkboxFormElement.removeEventListener(\r\n        'change',\r\n        this.boundControllableCheckboxChangeHandler,\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange() {\r\n    const isChecked = this.inputElement.checked;\r\n\r\n    for (const checkboxFormElement of this.checkboxElements) {\r\n      checkboxFormElement.checked = isChecked;\r\n    }\r\n  }\r\n\r\n  handleControllableCheckboxChange() {\r\n    const isAllChecked = this.checkboxElements.every(\r\n      (checkboxFormElement) => checkboxFormElement.checked,\r\n    );\r\n\r\n    this.inputElement.checked = isAllChecked;\r\n  }\r\n}\r\n\r\nwindow.customElements.define('select-all-checkbox', SelectAllCheckboxElement);\r\n","const FOCUSABLE_ELEMENTS_SELECTOR =\r\n  'input:not([type=\"hidden\"]):not([hidden]), button:not([hidden]), a:not([hidden]), textarea:not([hidden]), select:not([hidden]), [tabindex]:not([hidden])';\r\n\r\nconst FOCUS_STORAGE_KEY = 'focus-element-id';\r\n\r\nexport class GridKeyboardNavigationElement extends HTMLElement {\r\n  private boundKeydownHandler = this.handleKeydown.bind(this);\r\n  private boundFocusinHandler = this.handleFocusin.bind(this);\r\n  private boundFocusoutHandler = this.handleFocusout.bind(this);\r\n\r\n  constructor() {\r\n    super();\r\n    this.setInitialTabIndices();\r\n\r\n    this.addEventListener('auto-save-text:toggle-edit-mode', (event: Event) => {\r\n      if (!(event instanceof CustomEvent)) {\r\n        return;\r\n      }\r\n\r\n      const target = event.target;\r\n\r\n      if (!(target instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n\r\n      const cellElement = target.closest('td, th');\r\n\r\n      if (!(cellElement instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n\r\n      const rowElement = cellElement.closest('tr');\r\n\r\n      if (!(rowElement instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n\r\n      const cellIndex = Array.from(rowElement.children).indexOf(cellElement);\r\n\r\n      const nextRowElement = rowElement.nextElementSibling;\r\n\r\n      if (!(nextRowElement instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n\r\n      const nextCellElement = nextRowElement.children[cellIndex];\r\n\r\n      if (!(nextCellElement instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n\r\n      const nextFocusableElement = nextCellElement.querySelector(\r\n        FOCUSABLE_ELEMENTS_SELECTOR,\r\n      );\r\n\r\n      if (!(nextFocusableElement instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n\r\n      nextFocusableElement.focus();\r\n    });\r\n  }\r\n\r\n  setInitialTabIndices() {\r\n    const focusableElements = Array.from(\r\n      this.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR),\r\n    );\r\n\r\n    for (const focusableElement of focusableElements) {\r\n      if (focusableElement instanceof HTMLElement) {\r\n        focusableElement.dataset.originalTabindex =\r\n          focusableElement.tabIndex.toString();\r\n      }\r\n\r\n      focusableElement.setAttribute('tabindex', '-1');\r\n    }\r\n\r\n    const autofocusElement = this.querySelector('[data-auto-focus=\"true\"]');\r\n    const focusElementId = sessionStorage.getItem(FOCUS_STORAGE_KEY) || '';\r\n    const focusElement = focusElementId\r\n      ? this.querySelector(`#${focusElementId}`)\r\n      : null;\r\n    const autoFocusedElement = autofocusElement || focusElement;\r\n\r\n    if (autoFocusedElement instanceof HTMLElement) {\r\n      return;\r\n    }\r\n\r\n    const firstRow = this.querySelector('tr');\r\n\r\n    if (!firstRow) {\r\n      return;\r\n    }\r\n\r\n    const firstCell = firstRow.querySelector('td, th');\r\n\r\n    if (!firstCell) {\r\n      return;\r\n    }\r\n\r\n    const firstCellFocusableElements = Array.from(\r\n      firstCell.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR),\r\n    );\r\n\r\n    const [firstFocusableElement] = firstCellFocusableElements;\r\n\r\n    if (!(firstFocusableElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    firstFocusableElement.setAttribute(\r\n      'tabindex',\r\n      firstFocusableElement.dataset.originalTabindex || '0',\r\n    );\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.addEventListener('keydown', this.boundKeydownHandler);\r\n    this.addEventListener('focusin', this.boundFocusinHandler);\r\n    this.addEventListener('focusout', this.boundFocusoutHandler);\r\n  }\r\n\r\n  disconnected() {\r\n    this.removeEventListener('keydown', this.boundKeydownHandler);\r\n    this.removeEventListener('focusin', this.boundFocusinHandler);\r\n    this.removeEventListener('focusout', this.boundFocusoutHandler);\r\n  }\r\n\r\n  handleFocusin(event: Event) {\r\n    if (!(event instanceof FocusEvent)) {\r\n      return;\r\n    }\r\n\r\n    const cellElement = event.composedPath().find((element) => {\r\n      return element instanceof HTMLElement && element.matches('td, th');\r\n    });\r\n\r\n    if (!(cellElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const focusableElements = Array.from(\r\n      cellElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR),\r\n    );\r\n\r\n    for (const focusableElement of focusableElements) {\r\n      if (focusableElement instanceof HTMLElement) {\r\n        focusableElement.setAttribute(\r\n          'tabindex',\r\n          focusableElement.dataset.originalTabindex || '0',\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  async handleFocusout(event: Event) {\r\n    if (!(event instanceof FocusEvent)) {\r\n      return;\r\n    }\r\n\r\n    const previousCellElement = event.composedPath().find((element) => {\r\n      return element instanceof HTMLElement && element.matches('td, th');\r\n    });\r\n\r\n    const focusedElement = window.document.activeElement;\r\n    const focusedCellElement =\r\n      focusedElement && this.contains(focusedElement)\r\n        ? focusedElement.closest('td, th')\r\n        : null;\r\n\r\n    const unfocusedCellElements = Array.from(\r\n      this.querySelectorAll('td, th'),\r\n    ).filter((cellElement) => {\r\n      return cellElement !== (focusedCellElement || previousCellElement);\r\n    });\r\n\r\n    for (const unfocusedCellElement of unfocusedCellElements) {\r\n      const focusableElements = Array.from(\r\n        unfocusedCellElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR),\r\n      );\r\n\r\n      for (const focusableElement of focusableElements) {\r\n        if (focusableElement instanceof HTMLElement) {\r\n          focusableElement.setAttribute('tabindex', '-1');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeydown(event: Event) {\r\n    if (!(event instanceof KeyboardEvent)) {\r\n      return;\r\n    }\r\n\r\n    const target = event.composedPath().find((element) => {\r\n      return element instanceof HTMLElement && element.matches('td, th');\r\n    });\r\n\r\n    if (!(target instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const cellElement = target.closest('td, th');\r\n\r\n    if (!(cellElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const editableAutoSaveTextInputElement = event\r\n      .composedPath()\r\n      .find((element) => {\r\n        return (\r\n          element instanceof HTMLInputElement &&\r\n          element.closest('auto-save-text') &&\r\n          !element.readOnly\r\n        );\r\n      });\r\n\r\n    if (editableAutoSaveTextInputElement) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === 'ArrowUp') {\r\n      event.preventDefault();\r\n      this.handleArrowUp(cellElement);\r\n    } else if (event.key === 'ArrowDown') {\r\n      event.preventDefault();\r\n      this.handleArrowDown(cellElement);\r\n    } else if (event.key === 'ArrowLeft') {\r\n      event.preventDefault();\r\n      this.handleArrowLeft(cellElement);\r\n    } else if (event.key === 'ArrowRight') {\r\n      event.preventDefault();\r\n      this.handleArrowRight(cellElement);\r\n    }\r\n  }\r\n\r\n  handleArrowUp(cellElement: HTMLElement) {\r\n    const rowElement = cellElement.closest('tr');\r\n\r\n    if (!rowElement) {\r\n      return;\r\n    }\r\n\r\n    const cellIndex = Array.from(rowElement.children).indexOf(cellElement);\r\n\r\n    const tableElement = rowElement.closest('table');\r\n\r\n    if (!(tableElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const rowElements = Array.from(tableElement.querySelectorAll('tr'));\r\n\r\n    const rowIndex = rowElements.indexOf(rowElement);\r\n\r\n    const targetRowElement = rowElements[rowIndex - 1];\r\n\r\n    if (!(targetRowElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const targetRowElementCells = Array.from(targetRowElement.children);\r\n\r\n    const targetCellElement =\r\n      targetRowElementCells[\r\n        Math.min(targetRowElementCells.length - 1, cellIndex)\r\n      ];\r\n\r\n    if (!(targetCellElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    this.focusElement(targetCellElement);\r\n  }\r\n\r\n  handleArrowDown(cellElement: HTMLElement) {\r\n    const rowElement = cellElement.closest('tr');\r\n\r\n    if (!rowElement) {\r\n      return;\r\n    }\r\n\r\n    const cellIndex = Array.from(rowElement.children).indexOf(cellElement);\r\n\r\n    const tableElement = rowElement.closest('table');\r\n\r\n    if (!(tableElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const rowElements = Array.from(tableElement.querySelectorAll('tr'));\r\n\r\n    const rowIndex = rowElements.indexOf(rowElement);\r\n\r\n    const targetRowElement = rowElements[rowIndex + 1];\r\n\r\n    if (!(targetRowElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const targetRowElementCells = Array.from(targetRowElement.children);\r\n\r\n    const targetCellElement =\r\n      targetRowElementCells[\r\n        Math.min(targetRowElementCells.length - 1, cellIndex)\r\n      ];\r\n\r\n    if (!(targetCellElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    this.focusElement(targetCellElement);\r\n  }\r\n\r\n  handleArrowLeft(cellElement: HTMLElement) {\r\n    const previousCellElement = cellElement.previousElementSibling;\r\n\r\n    if (!(previousCellElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    this.focusElement(previousCellElement);\r\n  }\r\n\r\n  handleArrowRight(cellElement: HTMLElement) {\r\n    const nextCellElement = cellElement.nextElementSibling;\r\n\r\n    if (!(nextCellElement instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    this.focusElement(nextCellElement);\r\n  }\r\n\r\n  focusElement(targetCellElement: HTMLElement) {\r\n    const targetCellElementFocusableElements = Array.from(\r\n      targetCellElement.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR),\r\n    );\r\n\r\n    const [firstFocusableElement] = targetCellElementFocusableElements;\r\n\r\n    if (firstFocusableElement instanceof HTMLElement) {\r\n      firstFocusableElement.focus();\r\n    }\r\n  }\r\n}\r\n\r\nwindow.customElements.define(\r\n  'grid-keyboard-navigation',\r\n  GridKeyboardNavigationElement,\r\n);\r\n","export class ModalDialogElement extends HTMLElement {\r\n  private boundKeydownHandler = this.handleKeydown.bind(this);\r\n  private dialogElement: HTMLDialogElement;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    const dialogElement = this.querySelector('dialog');\r\n\r\n    if (!(dialogElement instanceof HTMLDialogElement)) {\r\n      throw new Error('Could not find dialog element');\r\n    }\r\n\r\n    this.dialogElement = dialogElement;\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.addEventListener('keydown', this.boundKeydownHandler);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.removeEventListener('keydown', this.boundKeydownHandler);\r\n  }\r\n\r\n  handleKeydown(event: Event) {\r\n    if (!(event instanceof KeyboardEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === 'Escape') {\r\n      const closeDialogFormElement = this.dialogElement.querySelector('form');\r\n\r\n      if (!(closeDialogFormElement instanceof HTMLFormElement)) {\r\n        return;\r\n      }\r\n\r\n      closeDialogFormElement.submit();\r\n    }\r\n  }\r\n}\r\n\r\nwindow.customElements.define('modal-dialog', ModalDialogElement);\r\n","export class FlyoutMenuElement extends HTMLElement {\r\n  private detailsElement: HTMLDetailsElement;\r\n  private boundKeydownHandler = this.handleKeydown.bind(this);\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    if (!this.shadowRoot) {\r\n      throw new Error('Could not attach shadow root');\r\n    }\r\n\r\n    const detailsElement = this.shadowRoot.querySelector('details');\r\n\r\n    if (!(detailsElement instanceof HTMLDetailsElement)) {\r\n      throw new Error('Could not find details element');\r\n    }\r\n\r\n    this.detailsElement = detailsElement;\r\n  }\r\n\r\n  connectedCallback() {\r\n    this.addEventListener('keydown', this.boundKeydownHandler);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.removeEventListener('keydown', this.boundKeydownHandler);\r\n  }\r\n\r\n  handleKeydown(event: Event) {\r\n    if (!(event instanceof KeyboardEvent)) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === 'Escape') {\r\n      this.detailsElement.open = false;\r\n    }\r\n  }\r\n}\r\n\r\nwindow.customElements.define('flyout-menu', FlyoutMenuElement);\r\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","SCROLL_STORAGE_KEY","FOCUS_STORAGE_KEY","windowY","sessionStorage","getItem","scrollTo","Number","autofocusElement","document","querySelector","focusElementId","focusElement","getElementById","elementToAutoFocus","HTMLElement","focus","HTMLInputElement","value","type","selectionStart","selectionEnd","addEventListener","setItem","scrollY","body","activeElement","parcelHelpers","defineInteropFlag","export","AutoSaveTextElement","_baseAutoSaveElement","BaseAutoSaveElement","connectedCallback","inputElement","boundClickHandler","boundChangeHandler","boundKeydownHandler","boundBlurHandler","disconnectedCallback","removeEventListener","handleClick","readOnly","toggleEditMode","handleBlur","handleKeydown","event","KeyboardEvent","key","currentValue","savedValue","getAttribute","preventDefault","dispatchEvent","CustomEvent","composed","bubbles","test","handleChange","formElement","form","markDirty","formAction","method","FormData","toString","includes","patch","then","setAttribute","catch","constructor","args","customElements","_getUniqueId","_unloadHandlerElement","shadowRoot","slotElement","HTMLSlotElement","assignedNodes","find","node","unloadHandlerElement","inputId","getUniqueId","boundInputHandler","handleInput","prev","DIRTY_ELEMENTS_KEY","dirtyElementsArray","split","push","uniqueDirtyElementsArray","Array","from","Set","dirtyElementsString","join","markClean","filter","removeAttribute","url","formData","append","fetch","status","_uuid","Date","now","v4","_v1JsDefault","default","_v3JsDefault","_v4JsDefault","_v5JsDefault","_nilJsDefault","_versionJsDefault","_validateJsDefault","_stringifyJsDefault","_parseJsDefault","_v1Js","interopDefault","_v3Js","_v4Js","_v5Js","_nilJs","_versionJs","_validateJs","_stringifyJs","_parseJs","_nativeJs","_nativeJsDefault","_rngJs","_rngJsDefault","options","buf","offset","randomUUID","rnds","random","rng","unsafeStringify","crypto","a","__esModule","exportAll","source","dest","keys","forEach","hasOwnProperty","enumerable","destName","getRandomValues","rnds8","Uint8Array","byteToHex","slice","arr","uuid","TypeError","_regexJs","_regexJsDefault","UnloadHandlerElement","boundBeforeUnloadHandler","handleBeforeUnload","observedAttributes","attributeChangedCallback","oldValue","newValue","triggerBeforeUnload","removeBeforeUnload","onbeforeunload","console","log","composedPath","returnValue","AutoSaveCheckboxElement","boundMarkClean","isChecked","checked","location","reload","defaultChecked","AutoSaveSearchElement","_debounce","_debounceDefault","debouncedInputHandler","submit","debounce","func","wait","immediate","later","last","timestamp","timeout","setTimeout","result","apply","context","debounced","arguments","callNow","clear","clearTimeout","flush","ClearSearchElement","buttonElement","HTMLButtonElement","HTMLFormElement","searchInputElement","elements","PostFormElement","boundSubmitHandler","handleFormSubmit","unloadHandler","formElements","SelectAllCheckboxElement","boundControllableCheckboxChangeHandler","handleControllableCheckboxChange","inputName","checkboxElements","element","checkboxFormElement","isAllChecked","every","GridKeyboardNavigationElement","FOCUSABLE_ELEMENTS_SELECTOR","boundFocusinHandler","handleFocusin","boundFocusoutHandler","handleFocusout","setInitialTabIndices","target","cellElement","closest","rowElement","cellIndex","children","indexOf","nextRowElement","nextElementSibling","nextCellElement","nextFocusableElement","focusableElements","querySelectorAll","focusableElement","dataset","originalTabindex","tabIndex","autoFocusedElement","firstRow","firstCell","firstCellFocusableElements","firstFocusableElement","disconnected","FocusEvent","matches","previousCellElement","focusedElement","focusedCellElement","contains","unfocusedCellElements","unfocusedCellElement","editableAutoSaveTextInputElement","handleArrowUp","handleArrowDown","handleArrowLeft","handleArrowRight","tableElement","rowElements","rowIndex","targetRowElement","targetRowElementCells","targetCellElement","Math","min","previousElementSibling","targetCellElementFocusableElements","ModalDialogElement","dialogElement","HTMLDialogElement","closeDialogFormElement","FlyoutMenuElement","detailsElement","HTMLDetailsElement","open"],"version":3,"file":"client.js.map"}